import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
import json
import os
from datetime import datetime

BOT_TOKEN = "7710092707:AAH_Ae_pXuaFeePDgkm0zS8KfA3_GBz6H9w"
ADMIN_IDS = [5206914915]
ADMIN_PASSWORD = "admin25"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

data_file = "data.json"
orders_file = "orders.txt"
products_file = "101.txt"

def load_data():
    if os.path.exists(data_file):
        with open(data_file, "r", encoding="utf-8") as f:
            return json.load(f)
    return {"cities": [], "categories": [], "products": []}

def save_data(data):
    with open(data_file, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=2, ensure_ascii=False)

def get_main_keyboard(is_admin=False):
    buttons = [
        [KeyboardButton(text="üõí –ö–∞—Ç–∞–ª–æ–≥")],
    ]
    if is_admin:
        buttons.append([KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"), KeyboardButton(text="‚ûñ –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä")])
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

@dp.message()
async def handle_message(message: Message):
    text = message.text.strip()
    user_id = message.from_user.id
    is_admin = user_id in ADMIN_IDS

    if text == "/start":
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_main_keyboard(is_admin))

    elif text == "üõí –ö–∞—Ç–∞–ª–æ–≥":
        data = load_data()
        if not data["products"]:
            await message.answer("–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç.")
        else:
            catalog = "\n".join(f"- {p}" for p in data["products"])
            await message.answer(f"üì¶ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:\n{catalog}")

    elif text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä" and is_admin:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–≤–∞—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /add —Ç–æ–≤–∞—Ä")

    elif text == "‚ûñ –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä" and is_admin:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: /del –∫–ª—é—á–µ–≤–æ–µ_—Å–ª–æ–≤–æ")

    elif text.startswith("/add ") and is_admin:
        product = text[5:].strip()
        data = load_data()
        data["products"].append(product)
        save_data(data)
        await message.answer("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!")

    elif text.startswith("/del ") and is_admin:
        keyword = text[5:].strip()
        data = load_data()
        before = len(data["products"])
        data["products"] = [p for p in data["products"] if keyword not in p]
        save_data(data)
        await message.answer(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: {before - len(data['products'])}")

    else:
        await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–∂–º–∏ /start –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏.")

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
